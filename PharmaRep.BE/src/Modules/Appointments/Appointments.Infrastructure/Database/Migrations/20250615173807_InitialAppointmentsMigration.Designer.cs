// <auto-generated />
using System;
using System.Collections.Generic;
using Appointments.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appointments.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PharmaRepAppointmentsDbContext))]
    [Migration("20250615173807_InitialAppointmentsMigration")]
    partial class InitialAppointmentsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("appointments")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Appointments.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.ComplexProperty<Dictionary<string, object>>("Address", "Appointments.Domain.Entities.Appointment.Address#AppointmentAddress", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("ZipCode")
                                .HasColumnType("bigint");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Date", "Appointments.Domain.Entities.Appointment.Date#AppointmentDate", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTimeOffset>("EndDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset>("StartDate")
                                .HasColumnType("datetimeoffset");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Appointments", "appointments");
                });

            modelBuilder.Entity("Appointments.Domain.Entities.Attendee", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AppointmentId");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Attendees", "appointments");
                });

            modelBuilder.Entity("Appointments.Domain.Entities.Attendee", b =>
                {
                    b.HasOne("Appointments.Domain.Entities.Appointment", null)
                        .WithMany("Attendees")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Appointments.Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Attendees");
                });
#pragma warning restore 612, 618
        }
    }
}
